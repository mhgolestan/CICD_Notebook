services:
  app:
    image: front-dev
    build:
      context: ./client # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./client:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - "5173:5173"
    container_name: front-dev # This will name the container hello-front-dev

  server:
    image: server-dev
    build:
      context: ./server
      dockerfile: dev.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - MONGODB_URI=mongodb://root:example@mongo:27017/the_database?authSource=admin
      - NODE_ENV=development
      - PORT=3000
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules

    container_name: back-dev
    depends_on:
      - mongo


  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started
      - server

  mongo:
    image: mongo
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
      - MONGO_INITDB_DATABASE=the_database
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo-data:/data/db

volumes:
  mongo-data: